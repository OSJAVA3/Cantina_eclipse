#BlueJ class context
comment0.params=lieferantenverw
comment0.target=Einkaufsliste(Lieferantenverwaltung)
comment0.text=\r\n\ Dem\ Konstruktor\ wird\ die\ zu\ verwendende\ Lieferantenverwaltung\ \u00FCbergeben.\r\n
comment1.params=kantinenplan
comment1.target=boolean\ addKantinenplan(Kantinenplan)
comment1.text=\r\n\ F\u00FCgt\ dem\ kantinenplanArrayList\ Instanzen\ vom\ Kantinenplan\ hinzu\ (im\ Regelfall\ 2\ Instanzen)\r\n\r\n\ @param\ \ kantinenplan\ \ \ Ein\ Kantinenplanobjekt\r\n\ @return\ \ \ \ \ True\ f\u00FCr\ ein\ erfolgreiches\ hinzuf\u00FCgen,\ False\ falls\ ein\ Problem\ aufgetreten\ ist.\r\n
comment2.params=
comment2.target=boolean\ erzeugeEinkaufsliste()
comment2.text=\r\n\ Erzeugt\ aus\ den\ im\ KantinenplanArrayList\ enthaltenen\ Kantinenpl\u00E4nen\ eine\ Einkaufsliste\r\n\ Es\ muss\ vorher\ mindestens\ ein\ Kantinenplan\ \u00FCber\ addKantinenplan\ referenziert\ worden\ sein.\r\n\ \r\n\ @return\ \ \ \ \ true,\ f\u00FCr\ eine\ erfolgreich\ erstellte\ Einkaufsliste,\ false,\ falls\ Fehler\ aufgetreten\ sind.\r\n
comment3.params=
comment3.target=void\ berechneGesamtkosten()
comment3.text=\r\n\ Berechnet\ die\ Gesamtkosten\ der\ Bestellung\ inklusive\ Transportkosten,\ die\ sich\ aus\ allen\ im\ BestellPosArrayList\ enthaltenen\ \r\n\ Bestellpositionen\ ergibt\ und\ schreibt\ sie\ in\ das\ Attribut\ gesamtkosten,\ welches\ mit\ getGesamtkosten()\ ausgelesen\ werden\r\n\ kann.\r\n
comment4.params=
comment4.target=float\ getGesamtkosten()
comment4.text=\r\n\ Gibt\ die\ Gesamtkosten\ der\ Einkaufsliste\ zur\u00FCck,\ die\ vorher\ mit\ berechneGesamtkosten()\ berechnet\ wurden.\r\n\r\n\r\n\ @return\ Die\ Gesamtkosten\ der\ Einkaufsliste.\r\n
comment5.params=
comment5.target=java.util.ArrayList\ getBestellPos()
comment5.text=\r\n\ Liefert\ einen\ ArrayList\ zur\u00FCck,\ der\ alle\ BestellPos-Objekte\ der\ Einkaufsliste\ enth\u00E4lt\r\n\ \r\n\ @return\ Einen\ ArrayList\ der\ alle\ BestellPos-Objekte\ enth\u00E4lt\r\n
numComments=6
